{"version":3,"sources":["airports.js","main.js"],"names":[],"mappings":";;AAAO,IAAM,YAAY,GAAG,CAAE,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN,CAAA;;;ACtC7B,IAAI,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,kBAAkB,GAAI,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;IAC3D,cAAc,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,QAAQ;SAAI,kBAAkB;CAAA,CAAC;IACrF,gBAAgB,GAAG,cAAc,CAC9B,GAAG,CAAC,UAAA,IAAI;qDAA8C,IAAI;CAAc,CAAC;IAC5E,cAAc,GAAG,gBAAgB,CAC9B,OAAO,CAAC,UAAC,GAAG;SAAK,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;CAAA,CAAC,CAAA;;AAEvE,cAAc,CACX,SAAS,CAAC,UAAC,OAAO,EAAK;AACtB,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK;MACrB,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;;AAEnC,MAAI,KAAK,KAAK,MAAM,EAAC;AACnB,KAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;GACzB;AACD,GAAC,CAAC,SAAS,IAAO,OAAO,CAAC,IAAI,kBAAa,KAAK,iBAAY,OAAO,CAAC,MAAM,CAAC,MAAM,AAAE,CAAA;AACnF,MAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;CAClB,EACD,UAAA,GAAG;SAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;CAAA,CAC1B,CAAA","file":"all.js","sourcesContent":["export const airportCodes = [ 'ATL'\n                            , 'BNA'\n                            , 'BOS'\n                            , 'BWI'\n                            , 'CLE'\n                            , 'CLT'\n                            , 'CVG'\n                            , 'DCA'\n                            , 'DEN'\n                            , 'DFW'\n                            , 'DTW'\n                            , 'EWR'\n                            , 'FLL'\n                            , 'IAD'\n                            , 'IAH'\n                            , 'IND'\n                            , 'JFK'\n                            , 'LAS'\n                            , 'LAX'\n                            , 'LGA'\n                            , 'MCI'\n                            , 'MCO'\n                            , 'MDW'\n                            , 'MEM'\n                            , 'MIA'\n                            , 'MSP'\n                            , 'ORD'\n                            , 'PDX'\n                            , 'PHL'\n                            , 'PHX'\n                            , 'PIT'\n                            , 'RDU'\n                            , 'SAN'\n                            , 'SEA'\n                            , 'SFO'\n                            , 'SJC'\n                            , 'SLC'\n                            , 'STL'\n                            , 'TEB'\n                            , 'TPA'\n                            ]\n","import {airportCodes} from 'airports'\n\nlet main = document.getElementsByTagName('main')[0]\n  , airportCodesStream =  Rx.Observable.fromArray(airportCodes)\n  , intervalStream = Rx.Observable.interval(1000).flatMap(interval => airportCodesStream)\n  , requestUrlStream = intervalStream\n      .map(code => `http://services.faa.gov/airport/status/${code}?format=json`)\n  , responseStream = requestUrlStream\n      .flatMap((url) => Rx.Observable.fromPromise(jQuery.getJSON(url)))\n\nresponseStream\n  .subscribe((airport) => {\n    let delay = airport.delay\n      , p = document.createElement('p')\n\n    if (delay === 'true'){\n      p.classList.add('delay')\n    }\n    p.innerHTML += `${airport.IATA} | Delay: ${delay} reason: ${airport.status.reason}`\n    main.appendChild(p)\n    }\n  , err => console.error(err)\n  )\n"],"sourceRoot":"/source/"}