{"version":3,"sources":["airport.js","airports.js","delayReasons.js","main.js","mockedAirport.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["export class Airport {\n\n  constructor(airport, el){\n    this.el = el\n    this.children = this.el.children\n    this.IATA = airport.IATA\n    this.delay = airport.delay\n    this.reason = airport.status.reason\n  }\n  toggleDelay(el, delayed){\n    if (delayed) {\n      el.classList.remove('ontime')\n      return el.classList.add('delayed')\n    }\n    el.classList.remove('delayed')\n    el.classList.add('ontime')\n  }\n  update(property, value) {\n    let el\n\n    if (this[property] !== value) {\n\n      let i = 0\n        , childrenLength = this.children.length\n      for (; i < this.children.length; i++) {\n        let child = this.children[i]\n\n        if (child.classList.contains(property)){\n          el = child\n\n          if (property === 'delay'){\n              this.toggleDelay(el, value)\n          }\n\n          break\n        }\n      }\n\n      el.innerHTML = `${property.toUpperCase()}: ${value}`\n      this[property] = value\n    }\n  }\n}\n","export const airportCodes = [ 'ATL'\n                            , 'BNA'\n                            , 'BOS'\n                            , 'BWI'\n                            , 'CLE'\n                            , 'CLT'\n                            , 'CVG'\n                            , 'DCA'\n                            , 'DEN'\n                            , 'DFW'\n                            , 'DTW'\n                            , 'EWR'\n                            , 'FLL'\n                            , 'IAD'\n                            , 'IAH'\n                            , 'IND'\n                            , 'JFK'\n                            , 'LAS'\n                            , 'LAX'\n                            , 'LGA'\n                            , 'MCI'\n                            , 'MCO'\n                            , 'MDW'\n                            , 'MEM'\n                            , 'MIA'\n                            , 'MSP'\n                            , 'ORD'\n                            , 'PDX'\n                            , 'PHL'\n                            , 'PHX'\n                            , 'PIT'\n                            , 'RDU'\n                            , 'SAN'\n                            , 'SEA'\n                            , 'SFO'\n                            , 'SJC'\n                            , 'SLC'\n                            , 'STL'\n                            , 'TEB'\n                            , 'TPA'\n                            ]\n","export const delayReasons = [ 'Geese! Everywhere. OH MY GOD.'\n                            , 'A nasty blizzard is dumping 10 feet of snow.'\n                            , 'Severe Thunderstorms.'\n                            , 'Tornadoes.'\n                            , 'Sharknadoes.'\n                            , 'Extreme flooding.'\n                            , 'Low visibility.'\n                            , 'Lot\\'s of fog.'\n                            , 'Fuel shortage.'\n                            ]\n","import {airportCodes} from './airports'\nimport {Airport} from './airport'\n\n\nlet main = document.getElementsByTagName('main')[0]\n  , airportCodesStream =  Rx.Observable.fromArray(airportCodes)\n  , requestUrlStream = airportCodesStream\n      .map(code => `http://services.faa.gov/airport/status/${code}?format=json`)\n  , responseStream = requestUrlStream\n      .flatMap((url) => Rx.Observable.fromPromise(getAirport(url)))\n  , intervalResponseStream = Rx.Observable.interval(3000).timeInterval().take(3).flatMap(interval => responseStream)\n\nresponseStream\n  .subscribe(airportData => {\n    airportData.delay = JSON.parse(airportData.delay)\n\n    let source = document.getElementById(\"airport-template\").innerHTML\n      , template = Handlebars.compile(source)\n      , airportTemplate = template(airportData)\n      , el = $(airportTemplate)[0]\n      , airport = new Airport(airportData, el)\n\n\n    let delayUpdateStream = intervalResponseStream\n      .filter(airportData => airportData.delay !== airport.delay)\n      .subscribe( airportData => {\n                    airport.update('delay', airportData.delay)\n                    airport.update('reason', airportData.status.reason)\n                  }\n                , err => console.error(err))\n\n    main.appendChild(el)\n\n\n    }\n  , err => console.error(err)\n  )\n","import {airportCodes} from './airports'\nimport {delayReasons} from './delayReasons'\n\n\nclass MockedAirport {\n  constructor(airport, delay, status){\n    this.IATA = airport\n    this.delay = delay\n    this.status = status\n  }\n  chooseDelay(reasons){\n    let reason = this.getRandomItem(reasons)\n    this.status = { reason }\n  }\n  getRandomItem(array){\n    return array[Math.floor(Math.random() * array.length)]\n  }\n}\n\n\nfunction airportFactory (airportCode) {\n  const number = Math.random()\n  let airport = new MockedAirport(airportCode, false, { reason: 'Things are great!' })\n\n  if (number > 0.5) {\n    airport.delay = true\n    airport.chooseDelay(delayReasons)\n  }\n\n  return airport\n}\n\nexport function getAirport(url){\n  return new Promise((res, rej) => {\n   let airportCode = url.split(/[\\/|?]+/)[4]\n\n    setTimeout(() => {\n      let airport = airportFactory(airportCode)\n      res(airport)\n    }, 300)\n  })\n}\n"],"sourceRoot":"/source/"}