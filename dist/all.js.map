{"version":3,"sources":["airport.js","airports.js","main.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["class Airport {\n\n  constructor(airport, parent){\n    this.name = airport.name\n    this.delay = airport.delay\n    this.reason = airport.reason\n    this.parent = parent\n    this.children = parent.children\n  }\n\n  set reason (reason) {\n    if (this.reason !== reason) {\n      let reasonElement = this.children.filter(el => el.className = 'reason')[0]\n      this.reason = reason\n      reasonElement.innerHTML = reason\n    }\n  }\n  \n  set delay (delay) {\n    if (this.delay !== delay) {\n      let delayElement = this.children.filter(el => el.className = 'delay')[0]\n      this.delay = delay\n      delayElement.innerHTML = delay\n    }\n  }\n}\n","export const airportCodes = [ 'ATL'\n                            , 'BNA'\n                            , 'BOS'\n                            , 'BWI'\n                            , 'CLE'\n                            , 'CLT'\n                            , 'CVG'\n                            , 'DCA'\n                            , 'DEN'\n                            , 'DFW'\n                            , 'DTW'\n                            , 'EWR'\n                            , 'FLL'\n                            , 'IAD'\n                            , 'IAH'\n                            , 'IND'\n                            , 'JFK'\n                            , 'LAS'\n                            , 'LAX'\n                            , 'LGA'\n                            , 'MCI'\n                            , 'MCO'\n                            , 'MDW'\n                            , 'MEM'\n                            , 'MIA'\n                            , 'MSP'\n                            , 'ORD'\n                            , 'PDX'\n                            , 'PHL'\n                            , 'PHX'\n                            , 'PIT'\n                            , 'RDU'\n                            , 'SAN'\n                            , 'SEA'\n                            , 'SFO'\n                            , 'SJC'\n                            , 'SLC'\n                            , 'STL'\n                            , 'TEB'\n                            , 'TPA'\n                            ]\n","import {airportCodes} from 'airports'\n\nlet main = document.getElementsByTagName('main')[0]\n  , airportCodesStream =  Rx.Observable.fromArray(airportCodes)\n  , requestUrlStream = airportCodesStream\n      .map(code => `http://services.faa.gov/airport/status/${code}?format=json`)\n  , responseStream = requestUrlStream\n      .flatMap((url) => Rx.Observable.fromPromise(jQuery.getJSON(url)))\n  , intervalResponseStream = Rx.Observable.interval(3000).timeInterval().flatMap(interval => responseStream)\n\nresponseStream\n  .subscribe((airportData) => {\n    airportData.delay = JSON.parse(airportData.delay)\n\n    let source = document.getElementById(\"airport-template\").innerHTML\n      , template = Handlebars.compile(source)\n      , airportTemplate = template(airportData)\n    console.log(airportTemplate.parentNode)\n\n    let airport = new Airport(airportData, airportTemplate.parent)\n    intervalResponseStream\n      .filter(airportData => airportData.delay !== airport.delay)\n      .subscribe((airportData) => {\n          airport.delay = airportData.delay\n        }\n      , err => console.error(err)\n      )\n\n      intervalResponseStream\n        .filter(airportData => airportData.reason !== airport.reason)\n        .subscribe((airportData) => {\n            airport.reason = airportData.reason\n          }\n        , err => console.error(err)\n        )\n\n    main.innerHTML += airportTemplate\n    }\n  , err => console.error(err)\n  )\n"],"sourceRoot":"/source/"}